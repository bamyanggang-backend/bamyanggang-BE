name: Java CI with Gradle # Workflow 이름

on: # Workflow를 자동으로 트리거 하기 위한 이벤트
  release:
    types: [push] # release push 이벤트 발생 시 실행
  push:
    branches: [practice] # practice 브랜치에서 동작
env:
  S3_BUCKET_NAME: cammoabucket
  CODE_DEPLOY_APP_NAME: spring-deploy
  CODE_DEPLOY_GROUP_NAME: spring-deploy-group

jobs: # 병렬로 실행되는 작업 단위, 여러 step으로 이루어짐
  build:

    runs-on: ubuntu-latest # 스크립트를 작동할 OS
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3 # 재사용 가능한 워크플로 파일의 위치 및 버전
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17' # Java 17로 변경
        distribution: 'temurin'
    
    # ./gradlew 실행 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      shell: bash

    # 프로젝트 build
    - name: Build with Gradle
      run: ./gradlew clean build -x test
      shell: bash

    # 프로젝트 압축
    - name: Make zip file
      run: zip -r ./practice-deploy.zip .
      shell: bash
    
    - name: Upload to S3
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: aws s3 cp --region ap-northeast-2 ./practice-deploy.zip s3://cammoabucket/practice-deploy.zip

     # 배포 그룹으로 애플리케이션 전송
    - name: Code Deploy
      run: aws deploy create-deployment --application-name spring-deploy --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name spring-deploy-group --s3-location bucket=cammoabucket,bundleType=zip,key=bamyanggang.zip
